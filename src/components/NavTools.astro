---
// NavTools.astro - Navigation dropdown tools component
import { getCategories } from '../constants/tools';

const categories = getCategories();
---

<!-- Desktop Tools Dropdown -->
<div class="desktop-tools relative">
	<button 
		id="tools-dropdown-trigger"
		class="flex items-center gap-2 px-3 py-2 text-gray-700 hover:text-gray-900 hover:bg-gray-50 rounded-lg transition-colors"
		aria-expanded="false"
		aria-haspopup="true"
		aria-label="Open video editing tools menu"
	>
		<span class="font-medium">Tools</span>
		<svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor" class="transition-transform" id="dropdown-arrow" aria-hidden="true">
			<path d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"/>
		</svg>
	</button>
	
	<!-- Dropdown Menu -->
	<div 
		id="tools-dropdown-menu"
		class="absolute left-0 top-full mt-2 w-[500px] bg-white rounded-xl shadow-xl border border-gray-200 opacity-0 invisible transform scale-95 transition-all duration-200 ease-out"
		role="menu"
		aria-labelledby="tools-dropdown-trigger"
	>
		<div class="p-4">
			{categories.map(category => (
				<div class={category.id !== 'audio-quality' ? 'mb-6' : ''}>
					<h4 class="text-sm font-semibold text-gray-900 mb-3 px-2">{category.name}</h4>
					<div class="grid gap-1 grid-cols-3">
						{category.tools.map(tool => (
							category.id === 'converters' ? (
								<a href={tool.url} class="flex flex-col items-center gap-2 p-2 hover:bg-gray-50 rounded-lg transition-colors text-center">
									<div class={`w-8 h-8 ${tool.bgColor} rounded-lg flex items-center justify-center ${tool.hoverBgColor} transition-colors`}>
										<span class={`${tool.icon.className || ''} ${tool.iconColor}`}>
											{tool.icon.content}
										</span>
									</div>
									<div class="text-xs text-gray-600">{tool.shortDescription}</div>
								</a>
							) : (
								<a href={tool.url} class="flex items-center gap-3 p-2 hover:bg-gray-50 rounded-lg transition-colors group">
									<div class={`w-8 h-8 ${tool.bgColor} rounded-lg flex items-center justify-center ${tool.hoverBgColor} transition-colors`}>
										{tool.icon.type === 'svg' ? (
											<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class={tool.iconColor}>
												<Fragment set:html={tool.icon.content} />
											</svg>
										) : (
											<span class={`${tool.icon.className || ''} ${tool.iconColor}`}>
												{tool.icon.content}
											</span>
										)}
									</div>
									<div>
										<div class="text-sm font-medium text-gray-900">{tool.shortName || tool.name}</div>
										<div class="text-xs text-gray-500">{tool.shortDescription}</div>
									</div>
								</a>
							)
						))}
					</div>
				</div>
			))}
		</div>
	</div>
</div>

<!-- Mobile Tools Dropdown Menu -->
<div 
	id="mobile-tools-menu"
	class="md:hidden fixed left-4 right-4 top-20 bg-white rounded-xl shadow-xl border border-gray-200 opacity-0 invisible transform scale-95 transition-all duration-200 ease-out z-50"
	role="menu"
	aria-labelledby="mobile-tools-trigger"
>
	<div class="p-4">
		{categories.map(category => (
			<div class={category.id !== 'audio-quality' ? 'mb-6' : ''}>
				<h4 class="text-sm font-semibold text-gray-900 mb-3 px-2">{category.name}</h4>
				<div class="grid gap-1 grid-cols-3">
					{category.tools.map(tool => (
						category.id === 'converters' ? (
							<a href={tool.url} class="flex flex-col items-center gap-2 p-2 hover:bg-gray-50 rounded-lg transition-colors text-center">
								<div class={`w-8 h-8 ${tool.bgColor} rounded-lg flex items-center justify-center ${tool.hoverBgColor} transition-colors`}>
									<span class={`${tool.icon.className || ''} ${tool.iconColor}`}>
										{tool.icon.content}
									</span>
								</div>
								<div class="text-xs text-gray-600">{tool.shortDescription}</div>
							</a>
						) : (
							<a href={tool.url} class="flex items-center gap-3 p-2 hover:bg-gray-50 rounded-lg transition-colors group">
								<div class={`w-8 h-8 ${tool.bgColor} rounded-lg flex items-center justify-center ${tool.hoverBgColor} transition-colors`}>
									{tool.icon.type === 'svg' ? (
										<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class={tool.iconColor}>
											<Fragment set:html={tool.icon.content} />
										</svg>
									) : (
										<span class={`${tool.icon.className || ''} ${tool.iconColor}`}>
											{tool.icon.content}
										</span>
									)}
								</div>
								<div>
									<div class="text-sm font-medium text-gray-900">{tool.shortName || tool.name}</div>
									<div class="text-xs text-gray-500">{tool.shortDescription}</div>
								</div>
							</a>
						)
					))}
				</div>
			</div>
		))}
	</div>
</div>
