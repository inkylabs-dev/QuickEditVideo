---
import NavTools from '../components/NavTools.astro';

export interface Props {
	title?: string;
	description?: string;
	keywords?: string;
	ogTitle?: string;
	ogDescription?: string;
	ogImage?: string;
	canonicalUrl?: string;
	breadcrumbs?: Array<{name: string, url: string}>;
	structuredData?: object;
}

const {
	title = "QuickEditVideo - Free Online Video Editor",
	description = "Edit videos online for free! Trim, convert, compress & enhance videos in your browser. No uploads, no signups. Works with MP4, AVI, WebM. Start editing now!",
	keywords = "video editor, video trimmer, online video editor, free video editor, video converter, trim video, cut video, edit video online, video compression",
	ogTitle = title,
	ogDescription = description,
	ogImage = "/logo.png",
	canonicalUrl,
	breadcrumbs = [],
	structuredData
} = Astro.props;

const currentUrl = canonicalUrl || Astro.url.href;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		
		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content={description} />
		<meta name="keywords" content={keywords} />
		<meta name="robots" content="index, follow" />
		<meta name="language" content="English" />
		<meta name="author" content="QuickEditVideo" />
		
		<!-- Canonical URL -->
		{canonicalUrl && <link rel="canonical" href={canonicalUrl} />}
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content={currentUrl} />
		<meta property="og:title" content={ogTitle} />
		<meta property="og:description" content={ogDescription} />
		<meta property="og:image" content={ogImage} />
		<meta property="og:site_name" content="QuickEditVideo" />
		
		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={currentUrl} />
		<meta property="twitter:title" content={ogTitle} />
		<meta property="twitter:description" content={ogDescription} />
		<meta property="twitter:image" content={ogImage} />
		
		<!-- Additional SEO -->
		<meta name="theme-color" content="#0d9488" />
		<meta name="msapplication-TileColor" content="#0d9488" />
		<meta name="application-name" content="QuickEditVideo" />
		
		<!-- Structured Data -->
		<script type="application/ld+json" is:inline>
		{
			"@context": "https://schema.org",
			"@type": "WebApplication",
			"name": "QuickEditVideo",
			"description": "Free online video editor for trimming, converting, and compressing videos in your browser",
			"url": "https://quickeditvideo.com",
			"applicationCategory": "MultimediaApplication",
			"operatingSystem": "Any",
			"offers": {
				"@type": "Offer",
				"price": "0",
				"priceCurrency": "USD"
			},
			"featureList": [
				"Video trimming",
				"Video conversion",
				"Video compression",
				"Privacy-focused (no uploads)",
				"Multiple format support"
			]
		}
		</script>
		
		{structuredData && (
			<script type="application/ld+json" is:inline>
				{JSON.stringify(structuredData)}
			</script>
		)}
		<!-- Critical CSS for above-the-fold content -->
		<style>
			/* Critical styles to avoid render blocking */
			.nav-critical { background: white; border-bottom: 1px solid #e5e7eb; position: sticky; top: 0; z-index: 50; }
			.nav-container { max-width: 72rem; margin: 0 auto; padding: 1rem; display: flex; align-items: center; justify-content: space-between; }
			.logo-link { font-weight: 700; font-size: 1.25rem; color: #111827; display: flex; align-items: center; gap: 0.25rem; text-decoration: none; }
			.logo-img { height: 2rem; width: auto; }
			.hero-critical { min-height: 100vh; background: #f9fafb; }
			
			/* Mobile navigation styles */
			@media (max-width: 768px) {
				.nav-mobile { display: flex; align-items: center; justify-content: space-between; width: 100%; }
				.nav-mobile .logo-center { position: absolute; left: 50%; transform: translateX(-50%); }
				.mobile-tools { display: flex; }
				.desktop-tools { display: none; }
				.desktop-badges { display: none; }
				.mobile-badges { display: flex; }
			}
			@media (min-width: 769px) {
				.mobile-tools { display: none; }
				.desktop-tools { display: flex; }
				.desktop-badges { display: flex; }
				.mobile-badges { display: none; }
			}
		</style>
		
		<!-- Prefetch critical resources for video editing -->
		
		<!-- Performance optimizations -->
		<meta name="format-detection" content="telephone=no">
		<meta http-equiv="x-dns-prefetch-control" content="on">
		
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
	</head>
	<body>
		<!-- Navigation -->
		<header>
			<nav class="bg-white border-b border-gray-200 sticky top-0 z-50" role="navigation" aria-label="Main navigation">
				<div class="max-w-6xl mx-auto px-4 py-4">
					<!-- Mobile Layout -->
					<div class="md:hidden nav-mobile">
						<!-- Mobile Tools (Left) -->
						<div class="mobile-tools">
							<button 
								id="mobile-tools-trigger"
								class="p-2 text-gray-700 hover:text-gray-900 hover:bg-gray-50 rounded-lg transition-colors"
								aria-expanded="false"
								aria-haspopup="true"
								aria-label="Open video editing tools menu"
							>
								<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
									<path d="M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z"/>
								</svg>
							</button>
						</div>
						
						<!-- Logo and Title (Center) -->
						<div class="logo-center">
							<a href="/" class="font-bold text-lg text-gray-900 flex items-center gap-1" aria-label="QuickEditVideo homepage">
								<img 
									src="/logo.png" 
									alt="QuickEditVideo Logo" 
									class="h-6 w-auto" 
									fetchpriority="high"
									width="24"
									height="24"
								/>
								<span class="hidden xs:inline">QuickEditVideo</span>
							</a>
						</div>
						
						<!-- Mobile Badges (Right) -->
						<div class="mobile-badges flex items-center gap-1 text-xs text-gray-600">
							<div class="relative group">
								<div class="flex items-center justify-center bg-green-100 p-2 rounded-full hover:bg-green-200 transition-colors">
									<svg width="12" height="12" viewBox="0 0 24 24" fill="currentColor" class="text-green-600">
										<path d="M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.6 14.8,10.5V11.5C14.8,12.4 14.4,13.2 13.7,13.7L17.25,17.25L16.17,18.33L12.67,14.83C12.45,14.94 12.23,15 12,15C10.6,15 9.2,13.4 9.2,11.5V10.5C9.2,8.6 10.6,7 12,7Z"/>
									</svg>
								</div>
								<!-- Tooltip -->
								<div class="absolute top-full left-1/2 transform -translate-x-1/2 mt-2 px-2 py-1 bg-gray-900 text-white text-xs rounded opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 whitespace-nowrap z-10">
									Private
									<div class="absolute bottom-full left-1/2 transform -translate-x-1/2 border-4 border-transparent border-b-gray-900"></div>
								</div>
							</div>
						</div>
					</div>
					
					<!-- Desktop Layout -->
					<div class="hidden md:flex items-center justify-between">
						<div class="flex items-center gap-8">
							<a href="/" class="font-bold text-xl text-gray-900 flex items-center gap-1" aria-label="QuickEditVideo homepage">
								<img 
									src="/logo.png" 
									alt="QuickEditVideo Logo" 
									class="h-8 w-auto" 
									fetchpriority="high"
									width="32"
									height="32"
								/>
								<span>QuickEditVideo</span>
							</a>
							
							<!-- Desktop Tools Dropdown -->
							<NavTools />
					</div>
					
					<!-- Desktop Badges -->
					<div class="desktop-badges flex items-center gap-2 text-sm text-gray-600">
						<div class="relative group">
							<div class="flex items-center justify-center bg-green-100 p-2 rounded-full hover:bg-green-200 transition-colors">
								<svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor" class="text-green-600">
									<path d="M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.6 14.8,10.5V11.5C14.8,12.4 14.4,13.2 13.7,13.7L17.25,17.25L16.17,18.33L12.67,14.83C12.45,14.94 12.23,15 12,15C10.6,15 9.2,13.4 9.2,11.5V10.5C9.2,8.6 10.6,7 12,7Z"/>
								</svg>
							</div>
							<!-- Tooltip -->
							<div class="absolute top-full left-1/2 transform -translate-x-1/2 mt-2 px-3 py-2 bg-gray-900 text-white text-sm rounded opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 whitespace-nowrap z-10">
								Private
								<div class="absolute bottom-full left-1/2 transform -translate-x-1/2 border-4 border-transparent border-b-gray-900"></div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</nav>
	</header>

	{breadcrumbs.length > 0 && (
		<nav class="bg-gray-50 border-b border-gray-200 py-2" aria-label="Breadcrumb">
			<div class="max-w-6xl mx-auto px-4 md:px-6">
				<ol class="flex items-center space-x-2 text-sm" itemscope itemtype="https://schema.org/BreadcrumbList">
					{breadcrumbs.map((crumb, index) => (
						<li class="flex items-center" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
							{index < breadcrumbs.length - 1 ? (
								<>
									<a href={crumb.url} class="text-gray-600 hover:text-gray-900 transition-colors" itemprop="item">
										<span itemprop="name">{crumb.name}</span>
									</a>
									<meta itemprop="position" content={String(index + 1)} />
									<svg class="ml-2 w-4 h-4 text-gray-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
									</svg>
								</>
							) : (
								<span class="text-gray-900 font-medium" itemprop="name">{crumb.name}</span>
							)}
							<meta itemprop="position" content={String(index + 1)} />
						</li>
					))}
				</ol>
			</div>
		</nav>
	)}

	
	<slot />

	<script async="async" data-cfasync="false" src="//pl27432156.profitableratecpm.com/dcd98c5173d8cb7b028f645ea697ef2f/invoke.js"></script>
    <div id="container-dcd98c5173d8cb7b028f645ea697ef2f"></div>


	<!-- Footer -->
	<footer class="bg-gray-900 text-white">
		<div class="max-w-6xl mx-auto px-4 py-8">
			<div class="flex flex-col md:flex-row justify-between items-center gap-6">
				<div class="flex items-center gap-3">
					<span class="text-sm text-gray-400">&copy; 2024 InkyLabs Inc.</span>
					<div class="flex items-center gap-2">
						<img src="/logo.png" alt="QuickEditVideo Logo" class="h-6 w-auto" />
						<span class="font-bold">QuickEditVideo</span>
					</div>
				</div>

				<div class="flex flex-wrap gap-6 text-gray-300 text-sm">
					<a href="/about" class="hover:text-white transition-colors">About</a>
					<a href="/privacy" class="hover:text-white transition-colors">Privacy</a>
					<a href="/tos" class="hover:text-white transition-colors">Terms</a>
					<a href="https://github.com/inkylabs-dev/QuickEditVideo" class="hover:text-white transition-colors" target="_blank" rel="noopener noreferrer">GitHub</a>
				</div>
			</div>
		</div>
	</footer>

		<!-- Tools Dropdown Script -->
		<script is:inline>
			// Tools dropdown functionality  
			document.addEventListener('DOMContentLoaded', function() {
				// Desktop dropdown
				const trigger = document.getElementById('tools-dropdown-trigger');
				const menu = document.getElementById('tools-dropdown-menu');
				const arrow = document.getElementById('dropdown-arrow');
				
				// Mobile dropdown
				const mobileTrigger = document.getElementById('mobile-tools-trigger');
				const mobileMenu = document.getElementById('mobile-tools-menu');
				
				function toggleMenu(triggerEl, menuEl, arrowEl) {
					if (!triggerEl || !menuEl) return;
					
					const isVisible = !menuEl.classList.contains('opacity-0');
					
					if (isVisible) {
						// Hide
						menuEl.classList.add('opacity-0', 'invisible', 'scale-95');
						menuEl.classList.remove('opacity-100', 'visible', 'scale-100');
						if (arrowEl) arrowEl.style.transform = 'rotate(0deg)';
						triggerEl.setAttribute('aria-expanded', 'false');
					} else {
						// Show
						menuEl.classList.remove('opacity-0', 'invisible', 'scale-95');
						menuEl.classList.add('opacity-100', 'visible', 'scale-100');
						if (arrowEl) arrowEl.style.transform = 'rotate(180deg)';
						triggerEl.setAttribute('aria-expanded', 'true');
					}
				}
				
				function hideMenu(menuEl, arrowEl, triggerEl) {
					if (!menuEl) return;
					menuEl.classList.add('opacity-0', 'invisible', 'scale-95');
					menuEl.classList.remove('opacity-100', 'visible', 'scale-100');
					if (arrowEl) arrowEl.style.transform = 'rotate(0deg)';
					if (triggerEl) triggerEl.setAttribute('aria-expanded', 'false');
				}

				// Desktop dropdown events
				if (trigger && menu) {
					trigger.addEventListener('click', function(e) {
						e.preventDefault();
						e.stopPropagation();
						toggleMenu(trigger, menu, arrow);
					});
				}
				
				// Mobile dropdown events
				if (mobileTrigger && mobileMenu) {
					mobileTrigger.addEventListener('click', function(e) {
						e.preventDefault();
						e.stopPropagation();
						toggleMenu(mobileTrigger, mobileMenu, null);
					});
				}

				// Close dropdown when clicking outside
				document.addEventListener('click', function(e) {
					const target = e.target;
					
					if (trigger && menu && target && !trigger.contains(target) && !menu.contains(target)) {
						hideMenu(menu, arrow, trigger);
					}
					
					if (mobileTrigger && mobileMenu && target && !mobileTrigger.contains(target) && !mobileMenu.contains(target)) {
						hideMenu(mobileMenu, null, mobileTrigger);
					}
				});

				// Close dropdown on escape key
				document.addEventListener('keydown', function(e) {
					if (e.key === 'Escape') {
						if (menu) hideMenu(menu, arrow, trigger);
						if (mobileMenu) hideMenu(mobileMenu, null, mobileTrigger);
					}
				});
			});
		</script>
	</body>
</html>

<style is:global>
	* {
		box-sizing: border-box;
	}
	
	html,
	body {
		margin: 0;
		width: 100%;
		max-width: 100%;
		height: 100%;
		font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif;
		line-height: 1.5;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		overflow-x: hidden;
	}
	
	/* Focus styles for better accessibility */
	button:focus-visible,
	input:focus-visible,
	a:focus-visible {
		outline: 2px solid #3b82f6;
		outline-offset: 2px;
	}
	
	/* Smooth scrolling */
	html {
		scroll-behavior: smooth;
	}
	
	/* Reduce layout shift with consistent video aspect ratio */
	.video-container-custom {
		aspect-ratio: 16 / 9;
		min-height: 200px;
	}
	
	/* Improve CLS by setting min heights for content areas */
	.content-section {
		min-height: 300px;
	}
	
	/* Performance optimization for transforms */
	.transition-transform {
		will-change: transform;
	}
	
	/* Optimize repaints */
	.hover\\:shadow-md:hover {
		will-change: box-shadow;
	}
	
	/* Remove default button styles, but preserve explicit borders */
	button:not([class*="border"]) {
		border: none;
	}
	
	button {
		background: none;
		font-family: inherit;
		cursor: pointer;
	}
	
	/* Ensure Tailwind border classes work */
	button[class*="border"] {
		border-style: solid;
	}
	
	/* Custom scrollbar for webkit browsers */
	::-webkit-scrollbar {
		width: 6px;
	}
	
	::-webkit-scrollbar-track {
		background: transparent;
	}
	
	::-webkit-scrollbar-thumb {
		background: #d1d5db;
		border-radius: 3px;
	}
	
	::-webkit-scrollbar-thumb:hover {
		background: #9ca3af;
	}
</style>
